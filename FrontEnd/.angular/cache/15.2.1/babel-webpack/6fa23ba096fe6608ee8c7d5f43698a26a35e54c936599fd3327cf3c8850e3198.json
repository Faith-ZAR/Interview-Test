{"ast":null,"code":"import _defineProperty from \"C:/Users/User/source/repos/Faith-ZAR/Interview-Test/FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ApiService } from '../shared/api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nlet ListComponent = class ListComponent {\n  constructor(restApi, actRoute, router) {\n    _defineProperty(this, \"restApi\", void 0);\n    _defineProperty(this, \"actRoute\", void 0);\n    _defineProperty(this, \"router\", void 0);\n    _defineProperty(this, \"Hero\", []);\n    _defineProperty(this, \"hero\", null);\n    _defineProperty(this, \"showUpdates\", false);\n    this.restApi = restApi;\n    this.actRoute = actRoute;\n    this.router = router;\n  }\n  getRandomColor2() {\n    let length = 6;\n    const chars = '0123456789ABCDEF';\n    let hex = '#';\n    // tslint:disable-next-line:curly\n    // tslint:disable-next-line:no-bitwise\n    while (length--) {\n      hex += chars[Math.random() * 16 | 0];\n    }\n    return hex;\n  }\n  getRandomColor() {\n    const color = Math.floor(0x1000000 * Math.random()).toString(16);\n    return '#' + ('000000' + color).slice(-6);\n  }\n  ngOnInit() {\n    this.loadHeroes();\n  }\n  // Get heroes list\n  loadHeroes() {\n    return this.restApi.getHeroes().subscribe(data => {\n      this.Hero = data;\n    });\n  }\n  evolveHero(name) {\n    if (window.confirm('Are you sure, you want to evolve?')) {\n      this.restApi.evolveHero(name, this.Hero).subscribe(data => {\n        console.log(data);\n        this.hero = data;\n        this.showUpdates = true;\n        this.router.navigate(['/list']);\n      });\n    }\n  }\n  // Delete hero\n  deleteHero(id) {\n    if (window.confirm('Are you sure, you want to delete?')) {\n      this.restApi.deleteHero(id).subscribe(data => {\n        this.loadHeroes();\n      });\n    }\n  }\n};\nListComponent = __decorate([Component({\n  selector: 'app-heroes-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n}), __metadata(\"design:paramtypes\", [ApiService, ActivatedRoute, Router])], ListComponent);\nexport { ListComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,cAAc,EAAEC,MAAM,QAAQ,iBAAiB;AASjD,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YACSC,OAAmB,EACnBC,QAAwB,EACxBC,MAAc;IAAA;IAAA;IAAA;IAAA,8BAPX,EAAE;IAAA,8BACF,IAAI;IAAA,qCACF,KAAK;IAGV,YAAO,GAAPF,OAAO;IACP,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;EACX;EAEJC,eAAe;IACb,IAAIC,MAAM,GAAG,CAAC;IACd,MAAMC,KAAK,GAAG,kBAAkB;IAChC,IAAIC,GAAG,GAAG,GAAG;IACb;IACA;IACA,OAAOF,MAAM,EAAE,EAAE;MAAEE,GAAG,IAAID,KAAK,CAAEE,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,GAAI,CAAC,CAAC;;IACzD,OAAOF,GAAG;EACZ;EAEAG,cAAc;IACZ,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,SAAS,GAAGJ,IAAI,CAACC,MAAM,EAAE,CAAC,CAACI,QAAQ,CAAC,EAAE,CAAC;IAChE,OAAO,GAAG,GAAG,CAAC,QAAQ,GAAGF,KAAK,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3C;EAEAC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEA;EACAA,UAAU;IACR,OAAO,IAAI,CAACf,OAAO,CAACgB,SAAS,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAI;MACrD,IAAI,CAACC,IAAI,GAAGD,IAAI;IAClB,CAAC,CAAC;EACJ;EAGAE,UAAU,CAACC,IAAI;IACb,IAAIC,MAAM,CAACC,OAAO,CAAC,mCAAmC,CAAC,EAAE;MACvD,IAAI,CAACvB,OAAO,CAACoB,UAAU,CAACC,IAAI,EAAE,IAAI,CAACF,IAAI,CAAC,CAACF,SAAS,CAACC,IAAI,IAAG;QACxDM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;QACjB,IAAI,CAACQ,IAAI,GAAGR,IAAI;QAChB,IAAI,CAACS,WAAW,GAAG,IAAI;QACvB,IAAI,CAACzB,MAAM,CAAC0B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC,CAAC;;EAEN;EAEA;EACAC,UAAU,CAACC,EAAE;IACX,IAAIR,MAAM,CAACC,OAAO,CAAC,mCAAmC,CAAC,EAAE;MACvD,IAAI,CAACvB,OAAO,CAAC6B,UAAU,CAACC,EAAE,CAAC,CAACb,SAAS,CAACC,IAAI,IAAG;QAC3C,IAAI,CAACH,UAAU,EAAE;MACnB,CAAC,CAAC;;EAEN;CAED;AA3DYjB,aAAa,eAPzBJ,SAAS,CAAC;EACTqC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,mCAUkBtC,UAAU,EACTC,cAAc,EAChBC,MAAM,KATZC,aAAa,CA2DzB;SA3DYA,aAAa","names":["Component","ApiService","ActivatedRoute","Router","ListComponent","constructor","restApi","actRoute","router","getRandomColor2","length","chars","hex","Math","random","getRandomColor","color","floor","toString","slice","ngOnInit","loadHeroes","getHeroes","subscribe","data","Hero","evolveHero","name","window","confirm","console","log","hero","showUpdates","navigate","deleteHero","id","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\User\\source\\repos\\Faith-ZAR\\Interview-Test\\FrontEnd\\src\\app\\list\\list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../shared/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-heroes-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  Hero: any = [];\r\n  hero: any = null;\r\n  showUpdates = false;\r\n\r\n  constructor(\r\n    public restApi: ApiService,\r\n    public actRoute: ActivatedRoute,\r\n    public router: Router\r\n  ) { }\r\n\r\n  getRandomColor2() {\r\n    let length = 6;\r\n    const chars = '0123456789ABCDEF';\r\n    let hex = '#';\r\n    // tslint:disable-next-line:curly\r\n    // tslint:disable-next-line:no-bitwise\r\n    while (length--) { hex += chars[(Math.random() * 16) | 0]; }\r\n    return hex;\r\n  }\r\n\r\n  getRandomColor() {\r\n    const color = Math.floor(0x1000000 * Math.random()).toString(16);\r\n    return '#' + ('000000' + color).slice(-6);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadHeroes();\r\n  }\r\n\r\n  // Get heroes list\r\n  loadHeroes() {\r\n    return this.restApi.getHeroes().subscribe((data: {}) => {\r\n      this.Hero = data;\r\n    });\r\n  }\r\n\r\n\r\n  evolveHero(name) {\r\n    if (window.confirm('Are you sure, you want to evolve?')) {\r\n      this.restApi.evolveHero(name, this.Hero).subscribe(data => {\r\n        console.log(data);\r\n        this.hero = data;\r\n        this.showUpdates = true;\r\n        this.router.navigate(['/list']);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Delete hero\r\n  deleteHero(id) {\r\n    if (window.confirm('Are you sure, you want to delete?')) {\r\n      this.restApi.deleteHero(id).subscribe(data => {\r\n        this.loadHeroes();\r\n      });\r\n    }\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}